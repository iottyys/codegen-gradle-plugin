
CREATE SEQUENCE INT_MESSAGE_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE INT_CHANNEL_MESSAGE (
	MESSAGE_ID CHAR(36) NOT NULL,
	GROUP_KEY CHAR(36) NOT NULL,
	CREATED_DATE BIGINT NOT NULL,
	MESSAGE_PRIORITY BIGINT,
	MESSAGE_SEQUENCE BIGINT NOT NULL ,
	MESSAGE_BYTES LONGVARBINARY,
	REGION VARCHAR(100) NOT NULL,
	constraint INT_CHANNEL_MESSAGE_PK primary key (REGION, GROUP_KEY, CREATED_DATE, MESSAGE_SEQUENCE)
);

CREATE INDEX INT_CHANNEL_MSG_DELETE_IDX ON INT_CHANNEL_MESSAGE (REGION, GROUP_KEY, MESSAGE_ID);
CREATE UNIQUE INDEX INT_CHANNEL_MSG_PRIORITY_IDX ON INT_CHANNEL_MESSAGE (REGION, GROUP_KEY, MESSAGE_PRIORITY DESC, CREATED_DATE, MESSAGE_SEQUENCE);

CREATE TABLE INT_CHANNEL_MESSAGE_PARTITION (
	GROUP_KEY CHAR(36) NOT NULL,
	REGION VARCHAR(100) NOT NULL,
	PARTITION_KEY VARCHAR(100) NOT NULL,
	PARTITION_SEQUENCE BIGINT NOT NULL ,
	constraint CAMEL_MESSAGE_IDEMPOTENT_REPOSITORY_PK primary key (REGION, GROUP_KEY, PARTITION_KEY)
);

CREATE TABLE CAMEL_MESSAGE_IDEMPOTENT_REPOSITORY (
	MESSAGE_ID CHAR(36) NOT NULL,
	PARTITION_KEY CHAR(36) NOT NULL,
	GROUP_KEY CHAR(36) NOT NULL,
	REGION VARCHAR(100) NOT NULL,
	CREATED_DATE BIGINT NOT NULL,
	MESSAGE_SEQUENCE BIGINT NOT NULL ,
	constraint CAMEL_MESSAGE_IDEMPOTENT_REPOSITORY_PK primary key (MESSAGE_ID)
);

CREATE UNIQUE INDEX CAMEL_MESSAGE_IDEMPOTENT_REPOSITORY_IDX ON CAMEL_MESSAGE_IDEMPOTENT_REPOSITORY (PARTITION_KEY, GROUP_KEY, REGION, CREATED_DATE DESC, MESSAGE_SEQUENCE DESC);
