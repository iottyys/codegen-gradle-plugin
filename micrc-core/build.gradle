plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'maven-publish'
}

group 'io.ttyys.micrc'
version '0.0.2-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    set('camel.version', '3.7.4')
    set('artemis.version', '2.17.0')
    set('lombok.version', '1.18.20')
    set('mapstruct.version', '1.4.2.Final')

    // 稳定版仓库地址
    set('releasesRepositoryUrl', "http://fengchao98.f3322.net:8081/repository/maven-releases/")
    // 测试版仓库地址
    set('snapshotsRepositoryUrl', "http://fengchao98.f3322.net:8081/repository/maven-snapshots/")
    // nexus用户名
    set('nexusUser', "admin")
    // nexus密码
    set('nexusPasswd', "105115Fc")
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "publicRepo"
        url = uri("http://fengchao98.f3322.net:8081/repository/maven-public/")
    }
}

bootJar.enabled = false
jar.enabled = true

dependencyManagement {
    imports {
        //noinspection GrUnresolvedAccess
        mavenBom "org.apache.camel.springboot:camel-spring-boot-bom:${property('camel.version')}"
    }
}

dependencies {
    // annotation
    implementation "io.ttyys.micrc:micrc-annotations:0.0.2-SNAPSHOT"

    // persistence
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "com.h2database:h2"

    // integration
    implementation "org.apache.camel.springboot:camel-spring-boot-starter"
    implementation "org.apache.camel.springboot:camel-bean-starter"
    implementation "org.apache.camel.springboot:camel-avro-starter"
    implementation "org.apache.camel.springboot:camel-avro-rpc-starter"
    implementation "org.apache.camel.springboot:camel-jms-starter"
    implementation "org.apache.camel.springboot:camel-sql-starter"
    implementation "org.apache.camel.springboot:camel-spring-integration-starter"
    implementation "org.apache.camel:camel-bean-validator"
//    implementation 'org.apache.camel:camel-avro'
    implementation 'org.apache.camel:camel-jackson'
    testImplementation "org.apache.camel:camel-test-spring-junit5"
    implementation "org.springframework.boot:spring-boot-starter-integration"
    implementation "org.springframework.integration:spring-integration-jdbc"

    // messaging
    implementation "org.springframework.boot:spring-boot-starter-artemis"
    implementation "org.apache.activemq:artemis-jms-server"
    testImplementation "org.apache.activemq:artemis-junit:${property('artemis.version')}"

    // for lombok
    implementation "org.projectlombok:lombok:${property('lombok.version')}"
    annotationProcessor "org.projectlombok:lombok:${property('lombok.version')}"

    implementation "org.mapstruct:mapstruct:${property('mapstruct.version')}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${property('mapstruct.version')}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${property('mapstruct.version')}"


    // for database
    runtimeOnly "com.h2database:h2"

    // unit and integration test
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.vintage:junit-vintage-engine:5.7.0"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'


    // database migration
//    implementation "org.liquibase:liquibase-core"
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}
task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

// 使用publishing中的publishToMavenLocal任务
// https://docs.gradle.org/current/userguide/publishing_maven.html#publishing_maven
publishing {
    repositories {
        maven {
            if (project.version.toString().endsWith("-SNAPSHOT")) {
                name = "snapshotsRepo"
                url = uri("${property('snapshotsRepositoryUrl')}")
            } else {
                name = "releasesRepo"
                url = uri("${property('releasesRepositoryUrl')}")
            }
            credentials {
                username = "${property('nexusUser')}"
                password = "${property('nexusPasswd')}"
            }
        }
    }
    publications {
        //noinspection GroovyAssignabilityCheck
        maven(MavenPublication) {
            //noinspection GroovyAssignabilityCheck
            from components.java
            artifact sourcesJar
//            artifact javadocJar
        }
    }
}
