import org.gradle.internal.jvm.Jvm

plugins {
    id 'java'
    id 'idea'
    id 'java-gradle-plugin'
    id "maven"
}

group 'io.ttyys.micrc'
version '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

ext {
    set('groovyVersion', '2.4.15')
    set('avroVersion', '1.10.2')
    set('commonsIoVersion', '2.8.0')
    set('slf4jVersion', '1.7.30')
    set('fastjsonVersion', '1.2.76')
    set('javapoetVersion', '1.13.0')
    set('micrcAnnotationVersion', '0.0.1-SNAPSHOT')
}

repositories {
    maven { url "file://" + new File("../../repo").getAbsolutePath() }
    mavenLocal()
    mavenCentral()
}

jar.enabled = true

dependencies {
    compileOnly files(Jvm.current().toolsJar)

    implementation "com.alibaba:fastjson:${fastjsonVersion}"
    implementation "org.apache.avro:avro-compiler:${avroVersion}"

    implementation "commons-io:commons-io:${commonsIoVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"

    implementation "io.ttyys.micrc:micrc-annotations:${micrcAnnotationVersion}"

    compile("com.squareup:javapoet:${javapoetVersion}")
}

uploadArchives {
    repositories {
        /**配置Maven部署器，将工件上传到本地目录，这里是放到与该项目同级目录的repo目录下*/
        mavenDeployer {
            repository(url: "file://" + new File("../../repo").getAbsolutePath())
        }
    }
}

gradlePlugin {
    plugins {
        "code-generator" {
            id = 'io.ttyys.gradle.codegen.codegen-gradle-plugin'
            implementationClass = 'io.ttyys.micrc.codegen.gradle.plugin.CodeGeneratorPlugin'
        }
        "service-integration" {
            id = 'io.ttyys.gradle.codegen.integration-gradle-plugin'
            implementationClass = 'io.ttyys.micrc.codegen.gradle.plugin.integration.ServiceIntegrationPlugin'
        }
    }
}
